module.exports = {
    plugins: [
        'fecs-demo',
    ],
    rules: {
        'fecs-demo/indent': ['error', 'space', 4, 0, true],
        'fecs-demo/valid-jsdoc': ['error', {
            prefer: { arg: 'param', argument: 'param', returns: 'return', fileoverview: 'file' },
            preferType: {
                String: 'string',
                Boolean: 'boolean',
                Number: 'number',
                int: 'number',
                Int: 'number',
                array: 'Array',
                function: 'Function',
                date: 'Date',
                object: 'Object',
                regexp: 'RegExp',
                promise: 'Promise'
            },
            preferLineComment: true,
            requireReturn: false,
            requireAuthor: true,
            requireDescription: true,
            requireFileDescription: true,
            requireParamDescription: true,
            requireReturnType: true,
            requireReturnDescription: false,
            requireBlankLineAfterDescription: true,
            requireEmptyLineBeforeComment: true,
            requireObjectPatternParamBranchName: false
        }],
        'fecs-demo/max-statements': ['warn', 50, { ignore: { AMD: true, IIFE: true } }],
        'fecs-demo/eol-last': ['error', true],
        'fecs-demo/camelcase': 'error',
        'fecs-demo/properties-quote': 'warn',
        'fecs-demo/no-forin-array': 'error',
        'fecs-demo/valid-amd-id': 'error',
        'fecs-demo/no-eval': 'error',
        'fecs-demo/no-global-require': 'error',
        'fecs-demo/jsx-var': 'error',
        'fecs-demo/esnext-ext': ['error', ['js', 'es']],
        'fecs-demo/no-extra-semi': 'error',
        'fecs-demo/use-method-definition': 'warn',
        'fecs-demo/use-property-shorthand': ['warn', { spread: true, get: false, set: false, method: false, computed: false }],
        'fecs-demo/prefer-class': 'error',
        'fecs-demo/prefer-super': 'error',
        'fecs-demo/export-on-declare': 'error',
        'fecs-demo/imports-on-top': 'error',
        'fecs-demo/valid-super': 'error',
        'fecs-demo/arrow-body-style': ['warn', 'as-needed', { ObjectExpression: true }],
        'fecs-demo/max-destructure-depth': ['error', 2],
        'fecs-demo/min-vars-per-destructure': ['error', 2],
        'fecs-demo/one-var-per-line': 'error',
        'fecs-demo/no-anonymous-before-rest': 'error',
        'fecs-demo/max-calls-in-template': 'error',
        'fecs-demo/no-extra-destructure': 'error',
        'fecs-demo/use-standard-promise': 'error',
        'fecs-demo/use-for-of': 'warn',
        'fecs-demo/prefer-spread-element': 'warn',
        'fecs-demo/prefer-async-await': 'error',
        'fecs-demo/shim-promise': 'error',
        'fecs-demo/no-this-arrow': 'error',
        'fecs-demo/valid-map-set': 'warn',
        'fecs-demo/prefer-destructure': 'warn',
        'fecs-demo/prefer-assign-pattern': 'warn',
        'fecs-demo/use-computed-property': 'warn',
        'fecs-demo/valid-var-jsdoc': 'warn',
        'fecs-demo/valid-class-jsdoc': ['warn', { classNode: false, privilege: false }],
        'fecs-demo/valid-constructor': 'warn',
        'fecs-demo/valid-dom-style': 'warn',
        'fecs-demo/use-async-require': 'off',
        'fecs-demo/no-require': 'warn'
    }
};
